sa1_sa2_comb$kozak_sequence <- substr(sa1_sa2_comb$Var.1, 1,6)
ggplot() + scale_x_log10() + scale_y_log10() + labs(x = "SA1", y = "SA2") +
geom_point(data = sa1_sa2_comb, aes(x = count.x, y = count.y), alpha = 0.2)
sa1_sa2_comb2 <- merge(sa1_sa2_comb, mini_lib_plasmid_counted,  by = "kozak_sequence")
## Rep 1
sa1_vsv_low <- read.delim(file = myfiles[155], sep = "\t")
sa1_vsv_high <- read.delim(file = myfiles[156], sep = "\t")
sa1_vsv_low2 <- read.delim(file = myfiles[167], sep = "\t")
sa1_vsv_counts <- merge(sa1_vsv_low, sa1_vsv_high, by = "X", all = T)
sa1_vsv_counts <- merge(sa1_vsv_counts, sa1_vsv_low2, by = "X", all = T)
colnames(sa1_vsv_counts) <- c("kozak","low","high","low2")
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = sa1_vsv_counts, aes(x = low, y = high), alpha = 0.2)
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = sa1_vsv_counts, aes(x = low, y = low2), alpha = 0.2)
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = sa1_vsv_counts, aes(x = high, y = low2), alpha = 0.2)
myfiles[c(192,193,155,156,167)]
sa1_vsv_r1 <- makeExperimentFrame2(c(192,193,155,155)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(total_reads))
sa1_vsv_r2 <- makeExperimentFrame2(c(192,193,156,156)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(total_reads))
sa1_vsv_r3 <- makeExperimentFrame2(c(192,193,167,167)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(total_reads))
sa1_vsv <- merge(merge(sa1_vsv_r1[,c("sequence","h_enrichment")], sa1_vsv_r2[,c("sequence","h_enrichment")], by = "sequence", all = T), sa1_vsv_r3[,c("sequence","h_enrichment")], by = "sequence", all = T)
colnames(sa1_vsv) <- c("sequence","low","high","low2")
sa1_vsv$h_enrichment <- (sa1_vsv$low + sa1_vsv$high + sa1_vsv$low2)/3
sa1_vsv <- merge(sa1_vsv, complete_frame6[,c("sequence","calibrated_score")])
sa1_vsv$n1 <- substr(sa1_vsv$sequence,1,1)
sa1_vsv <- merge(sa1_vsv, kozak_and_variant_key, by = "n1", all.x = T)
sa1_vsv_template_henrichment <- (sa1_vsv %>% filter(sequence == "XXXXXXXXX"))$h_enrichment
sa1_vsv <- sa1_vsv %>% filter(variant %in% c("WT","I21N","D355N"))
sa1_vsv$variant <- factor(sa1_vsv$variant, levels = c("WT","I21N","K31D","D355N"))
ggplot() + scale_x_log10() + scale_y_log10() + labs(x = "Calibrated abundance level", y = "Rate of infection (enrichment upon hygro treatment)") +
geom_point(data = sa1_vsv, aes(x = calibrated_score, y = h_enrichment, color = variant), alpha = 0.2) +
facet_grid(cols = vars(variant))
## Rep 2
sa1_vsv_r4 <- read.delim(file = myfiles[171], sep = "\t")
sa1_vsv_r5 <- read.delim(file = myfiles[172], sep = "\t")
sa1_vsv_r6 <- read.delim(file = myfiles[183], sep = "\t")
sa2_vsv_counts <- merge(sa1_vsv_r4, sa1_vsv_r5, by = "X", all = T)
sa2_vsv_counts <- merge(sa2_vsv_counts, sa1_vsv_r6, by = "X", all = T)
colnames(sa2_vsv_counts) <- c("kozak","r4","r5","r6")
## I0171 is missing data for some reason
sa2_vsv <- makeExperimentFrame2(c(192,193,172,183)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa2_vsv <- merge(sa2_vsv, complete_frame6[,c("sequence","calibrated_score")])
sa2_vsv$n1 <- substr(sa2_vsv$sequence,1,1)
sa2_vsv <- merge(sa2_vsv, kozak_and_variant_key, by = "n1", all.x = T)
sa2_vsv_template_henrichment <- (sa2_vsv %>% filter(sequence == "XXXXXXXXX"))$h_enrichment
sa2_vsv <- sa2_vsv %>% filter(variant %in% c("WT","I21N","D355N"))
sa2_vsv$variant <- factor(sa2_vsv$variant, levels = c("WT","I21N","K31D","D355N"))
ggplot() + scale_x_log10() + scale_y_log10() + labs(x = "Calibrated abundance level", y = "Rate of infection (enrichment upon hygro treatment)") +
geom_point(data = sa2_vsv, aes(x = calibrated_score, y = h_enrichment, color = variant), alpha = 0.2) +
facet_grid(cols = vars(variant))
## Now average the values
sa_vsv <- merge(sa1_vsv[,c("sequence","calibrated_score","variant","h_enrichment")], sa2_vsv[,c("sequence","h_enrichment")], by = "sequence")
sa_vsv$h_enrichment.x2 <- sa_vsv$h_enrichment.x / mean((sa_vsv %>% filter(variant == "WT" & calibrated_score < 1.1 & calibrated_score > 0.9))$h_enrichment.x, na.rm = T)
sa_vsv$h_enrichment.y2 <- sa_vsv$h_enrichment.y / mean((sa_vsv %>% filter(variant == "WT" & calibrated_score < 1.1 & calibrated_score > 0.9))$h_enrichment.y, na.rm = T)
sa_vsv$ave_enrichment <- (sa_vsv$h_enrichment.x2 + sa_vsv$h_enrichment.y2)/2
sa_vsv_template_henrichment <- (sa1_vsv_template_henrichment + sa2_vsv_template_henrichment)/2
ggplot() + scale_x_log10() + scale_y_log10(limits = c(0.003,10)) + labs(x = "Calibrated abundance level", y = "Rate of infection (enrichment upon hygro treatment)") +
geom_hline(yintercept = sa_vsv_template_henrichment, color = "purple", size = 2, alpha = 0.5) +
geom_point(data = sa_vsv, aes(x = calibrated_score, y = ave_enrichment, color = variant), alpha = 0.2) +
facet_grid(cols = vars(variant))
## Custom test pair
test_pair1 <- read.delim(file = myfiles[181], sep = "\t")
test_pair2 <- read.delim(file = myfiles[182], sep = "\t")
test_pair <- merge(test_pair1, test_pair2, by = "X", all = T)
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = test_pair, aes(x = count.x, y = count.y), alpha = 0.2)
sa1_s1_r1 <- makeExperimentFrame2(c(153,154,157,157)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa1_s1_r2 <- makeExperimentFrame2(c(153,154,158,158)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa1_s1_r3 <- makeExperimentFrame2(c(153,154,165,165)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa1_s1 <- merge(merge(sa1_s1_r1[,c("sequence","h_enrichment")], sa1_s1_r2[,c("sequence","h_enrichment")], by = "sequence", all = T), sa1_s1_r3[,c("sequence","h_enrichment")], by = "sequence", all = T)
colnames(sa1_s1) <- c("sequence","low","high","low2")
sa1_s1$h_enrichment <- (sa1_s1$low + sa1_s1$high + sa1_s1$low2)/3
sa1_s1 <- merge(sa1_s1, complete_frame6[,c("sequence","calibrated_score")])
sa1_s1$n1 <- substr(sa1_s1$sequence,1,1)
sa1_s1 <- merge(sa1_s1, kozak_and_variant_key, by = "n1", all.x = T)
sa1_s1_template_henrichment <- (sa1_s1 %>% filter(sequence == "XXXXXXXXX"))$h_enrichment
sa1_s1 <- sa1_s1 %>% filter(variant %in% c("WT","I21N","D355N"))
sa1_s1$variant <- factor(sa1_s1$variant, levels = c("WT","I21N","K31D","D355N"))
ggplot() + scale_x_log10() + scale_y_log10() + labs(x = "Calibrated abundance level", y = "Rate of infection (enrichment upon hygro treatment)") +
geom_point(data = sa1_s1, aes(x = calibrated_score, y = h_enrichment, color = variant), alpha = 0.2) +
facet_grid(cols = vars(variant))
## Rep 2
sa2_s1_low <- read.delim(file = myfiles[173], sep = "\t")
sa2_s1_high <- read.delim(file = myfiles[174], sep = "\t")
sa2_s1_low2 <- read.delim(file = myfiles[181], sep = "\t")
sa2_s1_counts <- merge(sa2_s1_low, sa2_s1_high, by = "X", all = T)
sa2_s1_counts <- merge(sa2_s1_counts, sa2_s1_low2, by = "X", all = T)
colnames(sa2_s1_counts) <- c("kozak","low","high","low2")
myfiles[c(169,170,173,174,182)]
sa2_s1_r1 <- makeExperimentFrame2(c(169,170,173,173)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa2_s1_r2 <- makeExperimentFrame2(c(169,170,174,174)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa2_s1_r3 <- makeExperimentFrame2(c(169,170,181,181)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa2_s1 <- merge(merge(sa2_s1_r1[,c("sequence","h_enrichment")], sa2_s1_r2[,c("sequence","h_enrichment")], by = "sequence", all = T), sa2_s1_r3[,c("sequence","h_enrichment")], by = "sequence", all = T)
colnames(sa2_s1) <- c("sequence","low","high","low2")
sa2_s1$h_enrichment <- (sa2_s1$low + sa2_s1$high + sa2_s1$low2)/3
sa2_s1 <- merge(sa2_s1, complete_frame6[,c("sequence","calibrated_score")])
sa2_s1$n1 <- substr(sa2_s1$sequence,1,1)
sa2_s1 <- merge(sa2_s1, kozak_and_variant_key, by = "n1", all.x = T)
sa2_s1_template_henrichment <- (sa2_s1 %>% filter(sequence == "XXXXXXXXX"))$h_enrichment
sa2_s1 <- sa2_s1 %>% filter(variant %in% c("WT","I21N","D355N"))
sa2_s1$variant <- factor(sa2_s1$variant, levels = c("WT","I21N","K31D","D355N"))
ggplot() + scale_x_log10() + scale_y_log10() + labs(x = "Calibrated abundance level", y = "Rate of infection (enrichment upon hygro treatment)") +
geom_point(data = sa2_s1, aes(x = calibrated_score, y = h_enrichment, color = variant), alpha = 0.2) +
facet_grid(cols = vars(variant))
## Now average the values
sa_s1 <- merge(sa1_s1[,c("sequence","calibrated_score","variant","h_enrichment")], sa2_s1[,c("sequence","h_enrichment")], by = "sequence")
sa_s1$h_enrichment.x2 <- sa_s1$h_enrichment.x / mean((sa_s1 %>% filter(variant == "WT" & calibrated_score < 1.1 & calibrated_score > 0.9))$h_enrichment.x, na.rm = T)
sa_s1$h_enrichment.y2 <- sa_s1$h_enrichment.y / mean((sa_s1 %>% filter(variant == "WT" & calibrated_score < 1.1 & calibrated_score > 0.9))$h_enrichment.y, na.rm = T)
sa_s1$ave_enrichment <- (sa_s1$h_enrichment.x2 + sa_s1$h_enrichment.y2)/2
sa_s1_template_henrichment <- (sa1_s1_template_henrichment + sa2_s1_template_henrichment)/2
ggplot() + scale_x_log10() + scale_y_log10(limits = c(0.003,3)) + labs(x = "Calibrated abundance level", y = "Rate of infection (enrichment upon hygro treatment)") +
geom_hline(yintercept = sa_s1_template_henrichment, color = "purple", size = 2, alpha = 0.5) +
geom_point(data = sa_s1, aes(x = calibrated_score, y = ave_enrichment, color = variant), alpha = 0.2) +
facet_grid(cols = vars(variant))
sa1_s2_low <- read.delim(file = myfiles[159], sep = "\t")
sa1_s2_high <- read.delim(file = myfiles[160], sep = "\t")
sa1_s2_low2 <- read.delim(file = myfiles[166], sep = "\t")
sa1_s2_counts <- merge(sa1_s2_low, sa1_s2_high, by = "X", all = T)
sa1_s2_counts <- merge(sa1_s2_counts, sa1_s2_low2, by = "X", all = T)
colnames(sa1_s2_counts) <- c("kozak","low","high","low2")
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = sa1_s2_counts, aes(x = low, y = high), alpha = 0.2)
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = sa1_s2_counts, aes(x = low, y = low2), alpha = 0.2)
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = sa1_s2_counts, aes(x = high, y = low2), alpha = 0.2)
sa1_s2_r1 <- makeExperimentFrame2(c(153,154,159,159)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa1_s2_r2 <- makeExperimentFrame2(c(153,154,160,160)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa1_s2_r3 <- makeExperimentFrame2(c(153,154,166,166)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa1_s2 <- merge(merge(sa1_s2_r1[,c("sequence","h_enrichment")], sa1_s2_r2[,c("sequence","h_enrichment")], by = "sequence", all = T), sa1_s2_r3[,c("sequence","h_enrichment")], by = "sequence", all = T)
colnames(sa1_s2) <- c("sequence","low","high","low2")
sa1_s2$h_enrichment <- (sa1_s2$low + sa1_s2$high + sa1_s2$low2)/3
sa1_s2 <- merge(sa1_s2, complete_frame6[,c("sequence","calibrated_score")])
sa1_s2$n1 <- substr(sa1_s2$sequence,1,1)
sa1_s2 <- merge(sa1_s2, kozak_and_variant_key, by = "n1", all.x = T)
sa1_s2_template_henrichment <- (sa1_s2 %>% filter(sequence == "XXXXXXXXX"))$h_enrichment
sa1_s2 <- sa1_s2 %>% filter(variant %in% c("WT","I21N","D355N"))
sa1_s2$variant <- factor(sa1_s2$variant, levels = c("WT","I21N","K31D","D355N"))
ggplot() + scale_x_log10() + scale_y_log10() + labs(x = "Calibrated abundance level", y = "Rate of infection (enrichment upon hygro treatment)") +
geom_point(data = sa1_s2, aes(x = calibrated_score, y = h_enrichment, color = variant), alpha = 0.2) +
facet_grid(cols = vars(variant))
## Rep 2
sa2_s2_low <- read.delim(file = myfiles[175], sep = "\t")
sa2_s2_high <- read.delim(file = myfiles[176], sep = "\t")
sa2_s2_low2 <- read.delim(file = myfiles[182], sep = "\t")
sa2_s2_counts <- merge(sa2_s2_low, sa2_s2_high, by = "X", all = T)
sa2_s2_counts <- merge(sa2_s2_counts, sa2_s2_low2, by = "X", all = T)
colnames(sa2_s2_counts) <- c("kozak","low","high","low2")
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = sa2_s2_counts, aes(x = low, y = high), alpha = 0.2)
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = sa2_s2_counts, aes(x = low, y = low2), alpha = 0.2)
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = sa2_s2_counts, aes(x = high, y = low2), alpha = 0.2)
sa2_s2_r1 <- makeExperimentFrame2(c(169,170,175,175)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa2_s2_r2 <- makeExperimentFrame2(c(169,170,176,176)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa2_s2_r3 <- makeExperimentFrame2(c(169,170,182,182)) %>% filter(h_enrichment != "Inf") %>% arrange(desc(h_enrichment))
sa2_s2 <- merge(merge(sa2_s2_r1[,c("sequence","h_enrichment")], sa2_s2_r2[,c("sequence","h_enrichment")], by = "sequence", all = T), sa2_s2_r3[,c("sequence","h_enrichment")], by = "sequence", all = T)
colnames(sa2_s2) <- c("sequence","low","high","low2")
sa2_s2$h_enrichment <- (sa2_s2$low + sa2_s2$high + sa2_s2$low2)/3
sa2_s2 <- merge(sa2_s2, complete_frame6[,c("sequence","calibrated_score")])
sa2_s2$n1 <- substr(sa2_s2$sequence,1,1)
sa2_s2 <- merge(sa2_s2, kozak_and_variant_key, by = "n1", all.x = T)
sa2_s2_template_henrichment <- (sa2_s2 %>% filter(sequence == "XXXXXXXXX"))$h_enrichment
sa2_s2 <- sa2_s2 %>% filter(variant %in% c("WT","I21N","D355N"))
sa2_s2$variant <- factor(sa2_s2$variant, levels = c("WT","I21N","K31D","D355N"))
ggplot() + scale_x_log10() + scale_y_log10() + labs(x = "Calibrated abundance level", y = "Rate of infection (enrichment upon hygro treatment)") +
geom_point(data = sa2_s2, aes(x = calibrated_score, y = h_enrichment, color = variant), alpha = 0.2) +
facet_grid(cols = vars(variant))
## Now average the values
sa_s2 <- merge(sa1_s2[,c("sequence","calibrated_score","variant","h_enrichment")], sa2_s2[,c("sequence","h_enrichment")], by = "sequence")
sa_s2$h_enrichment.x2 <- sa_s2$h_enrichment.x / mean((sa_s2 %>% filter(variant == "WT" & calibrated_score < 1.1 & calibrated_score > 0.9))$h_enrichment.x, na.rm = T)
sa_s2$h_enrichment.y2 <- sa_s2$h_enrichment.y / mean((sa_s2 %>% filter(variant == "WT" & calibrated_score < 1.1 & calibrated_score > 0.9))$h_enrichment.y, na.rm = T)
sa_s2$ave_enrichment <- (sa_s2$h_enrichment.x2 + sa_s2$h_enrichment.y2)/2
sa_s2_template_henrichment <- (sa1_s2_template_henrichment + sa2_s2_template_henrichment)/2
ggplot() + scale_x_log10() + scale_y_log10(limits = c(0.003,3)) + labs(x = "Calibrated abundance level", y = "Rate of infection (enrichment upon hygro treatment)") +
geom_hline(yintercept = sa_s2_template_henrichment, color = "purple", size = 2, alpha = 0.5) +
geom_point(data = sa_s2, aes(x = calibrated_score, y = ave_enrichment, color = variant), alpha = 0.2) +
facet_grid(cols = vars(variant))
template_seqabund_dataframe <- data.frame("virus" = c("VSV","SARS-CoV","SARS-CoV-2"),
"template" = c(sa_vsv_template_henrichment,sa_s1_template_henrichment,sa_s2_template_henrichment))
template_seqabund_dataframe$virus <- factor(template_seqabund_dataframe$virus, levels = c("VSV","SARS-CoV","SARS-CoV-2"))
sequence_abundance_compiled <- rbind(sa_vsv[,c("sequence","variant","calibrated_score","ave_enrichment")] %>% mutate(virus = "VSV"),
sa_s1[,c("sequence","variant","calibrated_score","ave_enrichment")] %>% mutate(virus = "SARS-CoV"),
sa_s2[,c("sequence","variant","calibrated_score","ave_enrichment")] %>% mutate(virus = "SARS-CoV-2"))
sequence_abundance_compiled$virus <- factor(sequence_abundance_compiled$virus, levels = c("VSV","SARS-CoV","SARS-CoV-2"))
Sequence_and_abundance_scatterplots <- ggplot() + theme(panel.grid = element_blank(), legend.position = "none") +
scale_x_log10() + scale_y_log10(limits = c(0.1,3), breaks = c(0.1,1)) + labs(x = "calibrated abundance", y = "Enrichment upon infection)") +
geom_hline(data = template_seqabund_dataframe, (aes(yintercept = template)), color = "purple", alpha = 0.5, size = 1) +
geom_point(data = sequence_abundance_compiled, aes(x = calibrated_score, y = ave_enrichment), alpha = 0.2, size = 1) +
stat_smooth(data= sequence_abundance_compiled, aes(x = calibrated_score, y = ave_enrichment, color = variant), geom='line', alpha=0.6, se=FALSE, size = 2) +
facet_grid(cols = vars(virus), rows = vars(variant)) +
NULL; Sequence_and_abundance_scatterplots
ggsave(file = "Plots/Sequence_and_abundance_scatterplots.pdf", Sequence_and_abundance_scatterplots, height = 2.3, width = 4.5)
Sequence_and_abundance_lineplots <- ggplot() + theme(panel.grid = element_blank(), legend.position = "bottom") +
scale_x_log10() + scale_y_log10(limits = c(0.1,3)) + labs(x = "calibrated abundance", y = "Enrichment upon infection") +
#geom_hline(data = template_seqabund_dataframe, (aes(yintercept = template)), color = "purple", alpha = 0.5, size = 1) +
geom_point(data = sequence_abundance_compiled, aes(x = calibrated_score, y = ave_enrichment), alpha = 0, size = 1) +
stat_smooth(data= sequence_abundance_compiled, aes(x = calibrated_score, y = ave_enrichment, color = variant), geom='line', alpha=0.6, se=FALSE, size = 2) +
facet_grid(cols = vars(virus)) +
NULL; Sequence_and_abundance_lineplots
ggsave(file = "Plots/Sequence_and_abundance_lineplots.pdf", Sequence_and_abundance_lineplots, height = 2, width = 4.25)
loess_span <- 0.75
newvals <- data.frame(calibrated_score=seq(0.01,1.02,.01))
## SARS1 with the ACE2 mutants
sequence_abundance_compiled_s1_wt <- sequence_abundance_compiled %>% filter(virus == "SARS-CoV" & variant == "WT" & !is.na(ave_enrichment)) %>% arrange(calibrated_score)
s1_wt_loess <- loess(ave_enrichment~calibrated_score, data=sequence_abundance_compiled_s1_wt, span = loess_span)
sequence_abundance_compiled_s1_wt_loess <- cbind(newvals, value=predict(s1_wt_loess, newvals))
sequence_abundance_compiled_s1_i21n <- sequence_abundance_compiled %>% filter(virus == "SARS-CoV" & variant == "I21N" & !is.na(ave_enrichment)) %>% arrange(calibrated_score)
s1_i21n_loess <- loess(ave_enrichment~calibrated_score, data=sequence_abundance_compiled_s1_i21n, span = loess_span)
sequence_abundance_compiled_s1_i21n_loess <- cbind(newvals, value=predict(s1_i21n_loess, newvals))
sequence_abundance_compiled_s1_d355n <- sequence_abundance_compiled %>% filter(virus == "SARS-CoV" & variant == "D355N" & !is.na(ave_enrichment)) %>% arrange(calibrated_score)
s1_d355n_loess <- loess(ave_enrichment~calibrated_score, data=sequence_abundance_compiled_s1_d355n, span = loess_span)
sequence_abundance_compiled_s1_d355n_loess <- cbind(newvals, value=predict(s1_d355n_loess, newvals))
ggplot() + labs(title = "SARS-CoV Spike") +
scale_x_log10(limits = c(0.02,1)) + scale_y_log10(limits = c(0.1,1.5)) +
geom_point(data = sequence_abundance_compiled_s1_wt, aes(x = calibrated_score, y = ave_enrichment), size = 1, alpha = 0.1) +
geom_line(data = sequence_abundance_compiled_s1_wt_loess, aes(x = calibrated_score, y = value)) +
geom_point(data = sequence_abundance_compiled_s1_i21n , aes(x = calibrated_score, y = ave_enrichment), size = 1, alpha = 0.1, color = "red") +
geom_line(data = sequence_abundance_compiled_s1_i21n_loess, aes(x = calibrated_score, y = value), color = "red") +
geom_point(data = sequence_abundance_compiled_s1_d355n , aes(x = calibrated_score, y = ave_enrichment), size = 1, alpha = 0.1, color = "cyan") +
geom_line(data = sequence_abundance_compiled_s1_d355n_loess, aes(x = calibrated_score, y = value), color = "cyan") +
NULL
## Now SARS2 with the ACE2 mutants
sequence_abundance_compiled_s2_wt <- sequence_abundance_compiled %>% filter(virus == "SARS-CoV-2" & variant == "WT" & !is.na(ave_enrichment)) %>% arrange(calibrated_score)
s2_wt_loess <- loess(ave_enrichment~calibrated_score, data=sequence_abundance_compiled_s2_wt, span = loess_span)
sequence_abundance_compiled_s2_wt_loess <- cbind(newvals, value=predict(s2_wt_loess, newvals))
sequence_abundance_compiled_s2_i21n <- sequence_abundance_compiled %>% filter(virus == "SARS-CoV-2" & variant == "I21N" & !is.na(ave_enrichment)) %>% arrange(calibrated_score)
s2_i21n_loess <- loess(ave_enrichment~calibrated_score, data=sequence_abundance_compiled_s2_i21n, span = loess_span)
sequence_abundance_compiled_s2_i21n_loess <- cbind(newvals, value=predict(s2_i21n_loess, newvals))
sequence_abundance_compiled_s2_d355n <- sequence_abundance_compiled %>% filter(virus == "SARS-CoV-2" & variant == "D355N" & !is.na(ave_enrichment)) %>% arrange(calibrated_score)
s2_d355n_loess <- loess(ave_enrichment~calibrated_score, data=sequence_abundance_compiled_s2_d355n, span = loess_span)
sequence_abundance_compiled_s2_d355n_loess <- cbind(newvals, value=predict(s2_d355n_loess, newvals))
ggplot() + labs(title = "SARS-CoV-2 Spike") +
scale_x_log10(limits = c(0.02,1)) + scale_y_log10(limits = c(0.1,1.5)) +
geom_point(data = sequence_abundance_compiled_s2_wt, aes(x = calibrated_score, y = ave_enrichment), size = 1, alpha = 0.1) +
geom_line(data = sequence_abundance_compiled_s2_wt_loess, aes(x = calibrated_score, y = value)) +
geom_point(data = sequence_abundance_compiled_s2_i21n , aes(x = calibrated_score, y = ave_enrichment), size = 1, alpha = 0.1, color = "red") +
geom_line(data = sequence_abundance_compiled_s2_i21n_loess, aes(x = calibrated_score, y = value), color = "red") +
geom_point(data = sequence_abundance_compiled_s2_d355n , aes(x = calibrated_score, y = ave_enrichment), size = 1, alpha = 0.1, color = "cyan") +
geom_line(data = sequence_abundance_compiled_s2_d355n_loess, aes(x = calibrated_score, y = value), color = "cyan") +
NULL
## Now VSV with the ACE2 mutants
sequence_abundance_compiled_vsv_wt <- sequence_abundance_compiled %>% filter(virus == "VSV" & variant == "WT" & !is.na(ave_enrichment)) %>% arrange(calibrated_score)
vsv_wt_loess <- loess(ave_enrichment~calibrated_score, data=sequence_abundance_compiled_vsv_wt, span = loess_span)
sequence_abundance_compiled_vsv_wt_loess <- cbind(newvals, value=predict(vsv_wt_loess, newvals))
sequence_abundance_compiled_vsv_i21n <- sequence_abundance_compiled %>% filter(virus == "VSV" & variant == "I21N" & !is.na(ave_enrichment)) %>% arrange(calibrated_score)
vsv_i21n_loess <- loess(ave_enrichment~calibrated_score, data=sequence_abundance_compiled_vsv_i21n, span = loess_span)
sequence_abundance_compiled_vsv_i21n_loess <- cbind(newvals, value=predict(vsv_i21n_loess, newvals))
sequence_abundance_compiled_vsv_d355n <- sequence_abundance_compiled %>% filter(virus == "VSV" & variant == "D355N" & !is.na(ave_enrichment)) %>% arrange(calibrated_score)
vsv_d355n_loess <- loess(ave_enrichment~calibrated_score, data=sequence_abundance_compiled_vsv_d355n, span = loess_span)
sequence_abundance_compiled_vsv_d355n_loess <- cbind(newvals, value=predict(vsv_d355n_loess, newvals))
ggplot() + labs(title = "VSV-G") +
scale_x_log10(limits = c(0.02,1.5)) + scale_y_log10(limits = c(0.1,1.5)) +
geom_point(data = sequence_abundance_compiled_vsv_wt, aes(x = calibrated_score, y = ave_enrichment), size = 1, alpha = 0.1) +
geom_line(data = sequence_abundance_compiled_vsv_wt_loess, aes(x = calibrated_score, y = value)) +
geom_point(data = sequence_abundance_compiled_vsv_i21n , aes(x = calibrated_score, y = ave_enrichment), size = 1, alpha = 0.1, color = "red") +
geom_line(data = sequence_abundance_compiled_vsv_i21n_loess, aes(x = calibrated_score, y = value), color = "red") +
geom_point(data = sequence_abundance_compiled_vsv_d355n , aes(x = calibrated_score, y = ave_enrichment), size = 1, alpha = 0.1, color = "cyan") +
geom_line(data = sequence_abundance_compiled_vsv_d355n_loess, aes(x = calibrated_score, y = value), color = "cyan") +
NULL
klib_raw = read.table("Data/STIM1_Kozak/klib.assembled.tsv", header = TRUE)
kr1_raw = read.table("Data/STIM1_Kozak/k_r1.assembled.tsv", header = TRUE)
kr2_raw = read.table("Data/STIM1_Kozak/k_r2.assembled.tsv", header = TRUE)
kr3_raw = read.table("Data/STIM1_Kozak/k_r3.assembled.tsv", header = TRUE)
klib_temp = klib_raw %>% count(read_class)
kr1_temp = kr1_raw %>% count(read_class)
kr2_temp = kr2_raw %>% count(read_class)
kr3_temp = kr3_raw %>% count(read_class)
klib = klib_raw %>% filter(read_class == "Kozak") %>% count(kozak_sequence)
kr1 = kr1_raw %>% filter(read_class == "Kozak") %>% count(kozak_sequence)
kr2 = kr2_raw %>% filter(read_class == "Kozak") %>% count(kozak_sequence)
kr3 = kr3_raw %>% filter(read_class == "Kozak") %>% count(kozak_sequence)
klib_comb <- rbind(klib,data.frame("kozak_sequence" = c("_OTHER","_TEMPL"), "n" = c(klib_temp$n[2],klib_temp$n[3]))) %>% mutate(log10_count = log10(n))
kr1_comb <- rbind(kr1,data.frame("kozak_sequence" = c("_OTHER","_TEMPL"), "n" = c(kr1_temp$n[2],klib_temp$n[3]))) %>% mutate(log10_count = log10(n))
kr2_comb <- rbind(kr2,data.frame("kozak_sequence" = c("_OTHER","_TEMPL"), "n" = c(kr2_temp$n[2],klib_temp$n[3]))) %>% mutate(log10_count = log10(n))
kr3_comb <- rbind(kr3,data.frame("kozak_sequence" = c("_OTHER","_TEMPL"), "n" = c(kr3_temp$n[2],klib_temp$n[3]))) %>% mutate(log10_count = log10(n))
klib_density <- ggplot() + geom_density(data = klib_comb, aes(x = log10_count))
klib_density_table <- ggplot_build(klib_density)$data[[1]]
klib_minquant <- klib_density_table %>% filter(x < quantile(klib_density_table$x, minquant_fraction))
klib_density_minima <- klib_minquant[klib_minquant$y == min(klib_minquant$y),"x"]
klib_density <- ggplot() + geom_density(data = klib, aes(x = log10_count)) + geom_vline(xintercept = klib_density_minima)
klib_filtered <- klib_comb %>% filter(log10_count > klib_density_minima)
kr1_density <- ggplot() + geom_density(data = kr1_comb, aes(x = log10_count))
kr1_density_table <- ggplot_build(kr1_density)$data[[1]]
kr1_minquant <- kr1_density_table %>% filter(x < quantile(kr1_density_table$x, minquant_fraction))
kr1_density_minima <- kr1_minquant[kr1_minquant$y == min(kr1_minquant$y),"x"]
kr1_density <- ggplot() + geom_density(data = kr1, aes(x = log10_count)) + geom_vline(xintercept = kr1_density_minima)
kr1_filtered <- kr1_comb %>% filter(log10_count > kr1_density_minima)
kr2_density <- ggplot() + geom_density(data = kr2_comb, aes(x = log10_count))
kr2_density_table <- ggplot_build(kr2_density)$data[[1]]
kr2_minquant <- kr2_density_table %>% filter(x < quantile(kr2_density_table$x, minquant_fraction))
kr2_density_minima <- kr2_minquant[kr2_minquant$y == min(kr2_minquant$y),"x"]
kr2_density <- ggplot() + geom_density(data = kr2, aes(x = log10_count)) + geom_vline(xintercept = kr2_density_minima)
kr2_filtered <- kr2_comb %>% filter(log10_count > kr2_density_minima)
kr3_density <- ggplot() + geom_density(data = kr3_comb, aes(x = log10_count))
kr3_density_table <- ggplot_build(kr3_density)$data[[1]]
kr3_minquant <- kr3_density_table %>% filter(x < quantile(kr3_density_table$x, minquant_fraction))
kr3_density_minima <- kr3_minquant[kr3_minquant$y == min(kr3_minquant$y),"x"]
kr3_density <- ggplot() + geom_density(data = kr3, aes(x = log10_count)) + geom_vline(xintercept = kr3_density_minima)
kr3_filtered <- kr3_comb %>% filter(log10_count > kr3_density_minima)
klib_freq = klib_filtered %>% mutate(n0 = n) %>% mutate(f0 = n/sum(n))
kr1_freq = kr1_filtered %>% mutate(n1 = n) %>% mutate(f1 = n/sum(n))
kr2_freq = kr2_filtered %>% mutate(n2 = n) %>% mutate(f2 = n/sum(n))
kr3_freq = kr3_filtered %>% mutate(n3 = n) %>% mutate(f3 = n/sum(n))
k_enrich <- merge(klib_freq[,c("kozak_sequence","n0","f0")], kr1_freq[,c("kozak_sequence","n1","f1")], by = "kozak_sequence", all = T)
k_enrich <- merge(k_enrich, kr2_freq[,c("kozak_sequence","n2","f2")], by = "kozak_sequence", all = T)
k_enrich <- merge(k_enrich, kr3_freq[,c("kozak_sequence","n3","f3")], by = "kozak_sequence", all = T)
k_enrich[is.na(k_enrich)] <- 0
k_enrich2 <- k_enrich %>% mutate(fcells = (f1 + f2 + f3)/3) %>% mutate(sdcells = sqrt(((f1-fcells)^2 + (f2-fcells)^2 + (f3-fcells)^2)/2)) %>% mutate(cvcells = sdcells / fcells)
#separate based on variants
k_enrich3 = k_enrich2 %>% mutate(code = substr(kozak_sequence, 1, 1))
k_enrich3 = k_enrich3 %>% mutate(variant = case_when(code == "A" ~ "WT",
code == "C" ~ "R429C",
code == "G" ~ "R304W"))
k_enrich3[k_enrich3$kozak_sequence == "_OTHER","variant"] <- "Other"
k_enrich3[k_enrich3$kozak_sequence == "_TEMPL","variant"] <- "Template"
i0710 <- read.csv(file = "Data/STIM1_Kozak/I0710.csv", header = T)
i0711 <- read.csv(file = "Data/STIM1_Kozak/I0711.csv", header = T)
r5t0 <- merge(i0710, i0711, by = "Sequence", all = T)
r5t0$kozak <- substr(r5t0$Sequence,1,6)
r5t0$coding <- substr(r5t0$Sequence,7,20)
r5t0 <- r5t0 %>% filter(coding == "ATGGATGTATGCG")
i0712 <- read.csv(file = "Data/STIM1_Kozak/I0712.csv", header = T)
i0713 <- read.csv(file = "Data/STIM1_Kozak/I0713.csv", header = T)
r5t1 <- merge(i0712, i0713, by = "Sequence", all = T)
r5t1$kozak <- substr(r5t1$Sequence,1,6)
r5t1$coding <- substr(r5t1$Sequence,7,20)
r5t1 <- r5t1 %>% filter(coding == "ATGGATGTATGCG")
i0714 <- read.csv(file = "Data/STIM1_Kozak/I0714.csv", header = T)
i0715 <- read.csv(file = "Data/STIM1_Kozak/I0715.csv", header = T)
r5t2 <- merge(i0714, i0715, by = "Sequence", all = T)
r5t2$kozak <- substr(r5t2$Sequence,1,6)
r5t2$coding <- substr(r5t2$Sequence,7,20)
r5t2 <- r5t2 %>% filter(coding == "ATGGATGTATGCG")
i0716 <- read.csv(file = "Data/STIM1_Kozak/I0716.csv", header = T)
i0717 <- read.csv(file = "Data/STIM1_Kozak/I0717.csv", header = T)
r6t0 <- merge(i0716, i0717, by = "Sequence", all = T)
r6t0$kozak <- substr(r6t0$Sequence,1,6)
r6t0$coding <- substr(r6t0$Sequence,7,20)
r6t0 <- r6t0 %>% filter(coding == "ATGGATGTATGCG")
i0718 <- read.csv(file = "Data/STIM1_Kozak/I0718.csv", header = T)
i0719 <- read.csv(file = "Data/STIM1_Kozak/I0719.csv", header = T)
r6t1 <- merge(i0718, i0719, by = "Sequence", all = T)
r6t1$kozak <- substr(r6t1$Sequence,1,6)
r6t1$coding <- substr(r6t1$Sequence,7,20)
r6t1 <- r6t1 %>% filter(coding == "ATGGATGTATGCG")
i0720 <- read.csv(file = "Data/STIM1_Kozak/I0720.csv", header = T)
i0721 <- read.csv(file = "Data/STIM1_Kozak/I0721.csv", header = T)
r6t2 <- merge(i0720, i0721, by = "Sequence", all = T)
r6t2$kozak <- substr(r6t2$Sequence,1,6)
r6t2$coding <- substr(r6t2$Sequence,7,20)
r6t2 <- r6t2 %>% filter(coding == "ATGGATGTATGCG")
#r5t0[is.na(r5t0)] <- 0.1
r5t0$freq1 <- r5t0$Count.x / sum(r5t0$Count.x, na.rm = T)
r5t0$freq2 <- r5t0$Count.y / sum(r5t0$Count.y, na.rm = T)
r5t0$r5t0 <- rowMeans(r5t0[c("freq1", "freq2")])
#r5t1[is.na(r5t1)] <- 0.1
r5t1$freq1 <- r5t1$Count.x / sum(r5t1$Count.x, na.rm = T)
r5t1$freq2 <- r5t1$Count.y / sum(r5t1$Count.y, na.rm = T)
r5t1$r5t1 <- rowMeans(r5t1[c("freq1", "freq2")])
r5 <- merge(r5t0[,c("kozak","r5t0")], r5t1[,c("kozak","r5t1")])
#r5t2[is.na(r5t2)] <- 0.1
r5t2$freq1 <- r5t2$Count.x / sum(r5t2$Count.x, na.rm = T)
r5t2$freq2 <- r5t2$Count.y / sum(r5t2$Count.y, na.rm = T)
r5t2$r5t2 <- rowMeans(r5t2[c("freq1", "freq2")])
r5 <- merge(r5, r5t2[,c("kozak","r5t2")])
r5$r5 <- (rowMeans(log10(r5[,c("r5t1","r5t2")]), na.rm = T) - log10(r5$r5t0))
colnames(r5)[1] <- "kozak_sequence"
#r6t0[is.na(r6t0)] <- 0.1
r6t0$freq1 <- r6t0$Count.x / sum(r6t0$Count.x, na.rm = T)
r6t0$freq2 <- r6t0$Count.y / sum(r6t0$Count.y, na.rm = T)
r6t0$r6t0 <- rowMeans(r6t0[c("freq1", "freq2")])
#r6t1[is.na(r6t1)] <- 0.1
r6t1$freq1 <- r6t1$Count.x / sum(r6t1$Count.x, na.rm = T)
r6t1$freq2 <- r6t1$Count.y / sum(r6t1$Count.y, na.rm = T)
r6t1$r6t1 <- rowMeans(r6t1[c("freq1", "freq2")])
r6 <- merge(r6t0[,c("kozak","r6t0")], r6t1[,c("kozak","r6t1")])
#r6t2[is.na(r6t2)] <- 0.1
r6t2$freq1 <- r6t2$Count.x / sum(r6t2$Count.x, na.rm = T)
r6t2$freq2 <- r6t2$Count.y / sum(r6t2$Count.y, na.rm = T)
r6t2$r6t2 <- rowMeans(r6t2[c("freq1", "freq2")])
r6 <- merge(r6, r6t2[,c("kozak","r6t2")])
r6$r6 <- (rowMeans(log10(r6[,c("r6t1","r6t2")]), na.rm = T) - log10(r6$r6t0))
colnames(r6)[1] <- "kozak_sequence"
k_enrich3$enrichment <- log10(k_enrich3$fcells / k_enrich3$f0)
k_score0 = k_enrich3 %>% select("kozak_sequence","variant","f0", "fcells","enrichment") %>% filter(!(enrichment %in% c("0","Inf")))
k_score <- merge(merge(k_score0, r5[,c("kozak_sequence","r5")], all = T), r6[,c("kozak_sequence","r6")], all = T)
k_score$survival <- rowMeans(k_score[,c("enrichment","r5","r6")], na.rm = T)
#abund_raw = read.csv("Kozak_values.csv")
abund_raw = complete_frame5[,c("sequence","calibrated_score")]
abund_raw = abund_raw %>% mutate(kozak_sequence = substr(sequence, 1, 6))
abund_stim = abund_raw %>% mutate(code = substr(kozak_sequence, 1,1)) %>% filter(code != "T")
k_score = left_join(k_score, abund_stim)
k_score_samples <- k_score %>% filter(variant %in% c("WT", "R304W","R429C") & !is.na(calibrated_score))
k_score_samples$variant <- factor(k_score_samples$variant, levels = c("WT", "R304W","R429C"))
STIM1_Kozak_histogram <- ggplot() +
labs(x = "Enrichment", y = "Number of variants") +
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), strip.text.y.right = element_text(angle = 0)) +
scale_x_log10(limits = c(0.01,100), expand = c(0,0), breaks = c(0.01,1,100)) +
#scale_y_continuous(breaks = c(0,20,40)) +
geom_vline(xintercept = 10^k_score$survival[2], linetype = 2) +
geom_histogram(data = k_score_samples, aes(x= 10^survival), bins = 10, color = "black", fill = "grey75") +
facet_grid(rows = vars(variant), scaes = "free.y") +
NULL; STIM1_Kozak_histogram
STIM1_Kozak_histogram <- ggplot() +
labs(x = "Enrichment", y = "Number of variants") +
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), strip.text.y.right = element_text(angle = 0)) +
scale_x_log10(limits = c(0.01,100), expand = c(0,0), breaks = c(0.01,1,100)) +
#scale_y_continuous(breaks = c(0,20,40)) +
geom_vline(xintercept = 10^k_score$survival[2], linetype = 2) +
geom_histogram(data = k_score_samples, aes(x= 10^survival), bins = 10, color = "black", fill = "grey75") +
facet_grid(rows = vars(variant), scales = "free.y") +
NULL; STIM1_Kozak_histogram
STIM1_Kozak_histogram <- ggplot() +
labs(x = "Enrichment", y = "Number of variants") +
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), strip.text.y.right = element_text(angle = 0)) +
scale_x_log10(limits = c(0.01,100), expand = c(0,0), breaks = c(0.01,1,100)) +
#scale_y_continuous(breaks = c(0,20,40)) +
geom_vline(xintercept = 10^k_score$survival[2], linetype = 2) +
geom_histogram(data = k_score_samples, aes(x= 10^survival), bins = 10, color = "black", fill = "grey75") +
facet_grid(rows = vars(variant), scales = "free_y") +
NULL; STIM1_Kozak_histogram
ggsave(file = "Plots/STIM1_Kozak_histogram.pdf", STIM1_Kozak_histogram, height = 1.5, width = 1.9)
k_score_samples$variant <- factor(k_score_samples$variant, levels = c("R304W","R429C","WT"))
STIM1_geom_smooth_plot <- ggplot() + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank()) +
scale_x_log10(expand = c(0,0), limits = c(0.007,1.34)) + scale_y_log10(expand = c(0,0)) +
labs(x = "Calibrated abundance score", y = "Enrichment score") +
geom_hline(yintercept = 10^k_score$survival[2], alpha = 0.4) +
geom_smooth(data = k_score_samples, aes(x= calibrated_score, y= 10^survival, color = variant), alpha = 0.1, span = 1.5) +
NULL; STIM1_geom_smooth_plot
ggsave(file = "Plots/STIM1_geom_smooth_plot.pdf", STIM1_geom_smooth_plot, height = 1.5, width = 2.9)
STIM1_Kozak_histogram <- ggplot() +
labs(x = "Enrichment", y = "Number of variants") +
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), strip.text.y.right = element_text(angle = 0)) +
scale_x_log10(limits = c(0.01,100), expand = c(0,0), breaks = c(0.01,1,100)) +
scale_y_continuous(breaks = c(0,30)) +
geom_vline(xintercept = 10^k_score$survival[2], linetype = 2) +
geom_histogram(data = k_score_samples, aes(x= 10^survival), bins = 10, color = "black", fill = "grey75") +
facet_grid(rows = vars(variant), scales = "free_y") +
NULL; STIM1_Kozak_histogram
ggsave(file = "Plots/STIM1_Kozak_histogram.pdf", STIM1_Kozak_histogram, height = 1.5, width = 1.9)
k_score_samples$variant <- factor(k_score_samples$variant, levels = c("WT", "R304W","R429C"))
STIM1_Kozak_histogram <- ggplot() +
labs(x = "Enrichment", y = "Number of variants") +
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), strip.text.y.right = element_text(angle = 0)) +
scale_x_log10(limits = c(0.01,100), expand = c(0,0), breaks = c(0.01,1,100)) +
scale_y_continuous(breaks = c(0,30)) +
geom_vline(xintercept = 10^k_score$survival[2], linetype = 2) +
geom_histogram(data = k_score_samples, aes(x= 10^survival), bins = 10, color = "black", fill = "grey75") +
facet_grid(rows = vars(variant), scales = "free_y") +
NULL; STIM1_Kozak_histogram
ggsave(file = "Plots/STIM1_Kozak_histogram.pdf", STIM1_Kozak_histogram, height = 1.5, width = 1.9)
Sequence_and_abundance_lineplots <- ggplot() + theme(panel.grid = element_blank(), legend.position = "bottom") +
scale_x_log10() + scale_y_log10(limits = c(0.1,3)) + labs(x = "calibrated abundance", y = "Enrichment upon infection") +
#geom_hline(data = template_seqabund_dataframe, (aes(yintercept = template)), color = "purple", alpha = 0.5, size = 1) +
geom_point(data = sequence_abundance_compiled, aes(x = calibrated_score, y = ave_enrichment), alpha = 0, size = 1) +
stat_smooth(data= sequence_abundance_compiled, aes(x = calibrated_score, y = ave_enrichment, color = variant), geom='line', alpha=0.6, se=FALSE, size = 1) +
facet_grid(cols = vars(virus)) +
NULL; Sequence_and_abundance_lineplots
ggsave(file = "Plots/Sequence_and_abundance_lineplots.pdf", Sequence_and_abundance_lineplots, height = 2, width = 4.25)
Sequence_and_abundance_lineplots <- ggplot() + theme(panel.grid = element_blank(), legend.position = "bottom") +
scale_x_log10() + scale_y_log10(limits = c(0.1,3)) + labs(x = "calibrated abundance", y = "Enrichment upon infection") +
#geom_hline(data = template_seqabund_dataframe, (aes(yintercept = template)), color = "purple", alpha = 0.5, size = 1) +
geom_point(data = sequence_abundance_compiled, aes(x = calibrated_score, y = ave_enrichment), alpha = 0, size = 1) +
stat_smooth(data= sequence_abundance_compiled, aes(x = calibrated_score, y = ave_enrichment, color = variant), geom='line', alpha=0.6, se=FALSE, size = 0.75) +
facet_grid(cols = vars(virus)) +
NULL; Sequence_and_abundance_lineplots
ggsave(file = "Plots/Sequence_and_abundance_lineplots.pdf", Sequence_and_abundance_lineplots, height = 2, width = 4.25)
## Trying a position weight matrix for the calibrated score
pwm_dataframe <- data.frame("n6" = rep(0,4),"n5" = rep(0,4),"n4" = rep(0,4),"n3" = rep(0,4),"n2" = rep(0,4),"n1" = rep(0,4))
rownames(pwm_dataframe) <- c("A","C","G","T")
for(x in 1:nrow(complete_frame4)){
temp_seq <- substr(complete_frame4$sequence[x],1,6)
temp_score <- as.numeric(complete_frame4$calibrated_score[x])
pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,1,1),"n6"] <- pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,1,1),"n6"] + temp_score
pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,2,2),"n5"] <- pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,2,2),"n5"] + temp_score
pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,3,3),"n4"] <- pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,3,3),"n4"] + temp_score
pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,4,4),"n3"] <- pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,4,4),"n3"] + temp_score
pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,5,5),"n2"] <- pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,5,5),"n2"] + temp_score
pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,6,6),"n1"] <- pwm_dataframe[rownames(pwm_dataframe) == substr(temp_seq,6,6),"n1"] + temp_score
}
pwm_dataframe2 <- pwm_dataframe / colSums(pwm_dataframe)
pwm_matrix <- as.matrix(pwm_dataframe2)
## Function for working out the position weight matrix value
pwm <- function(freq, total, bg=0.25){
#using the formulae above
p <- (freq + (sqrt(total) * 1/4)) / (total + (4 * (sqrt(total) * 1/4)))
log2(p/bg)
}
pwm_matrix2 <- pwm(pwm_matrix,6)
## Logo plot
proportion <- function(x){
rs <- sum(x);
return(x / rs);
}
## Bar chart
pwm_matrix_melt <- melt(pwm_matrix)
PWM_barplot <- ggplot() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(x = "Position along Kozak", y = "Weighted\nfrequency") +
geom_bar(data = pwm_matrix_melt, aes(x = Var2, y = value, fill = Var1), stat = "identity", color = "black")
PWM_barplot
ggsave(file = "plots/PWM_barplot.pdf", PWM_barplot, height = 1.2, width = 3)
PWM_pointplot <- ggplot() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "top") +
labs(x = "Position along Kozak", y = "Weighted\nfrequency") +
geom_hline(yintercept = 0.25, linetype = 2, alpha = 0.4) +
geom_point(data = pwm_matrix_melt, aes(x = Var2, y = value, color = Var1, fill = Var1), stat = "identity", shape = 21, size = 2, alpha = 0.5) +
NULL; PWM_pointplot
ggsave(file = "plots/PWM_pointplot.pdf", PWM_pointplot, height = 2, width = 3.4)
