ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = k_enrich, aes(x = f0b, y = f2b))
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = k_enrich, aes(x = f0b, y = f3b))
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = k_enrich, aes(x = f1b, y = f2b))
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = k_enrich, aes(x = f2b, y = f3b))
k_enrich_melt <- melt(k_enrich[,c("kozak_sequence","f0b","f1b","f2b","f3b")])
ggplot() + scale_x_log10() +
geom_density(data = k_enrich_melt, aes(x = value, fill = variable), alpha = 0.5) +
geom_vline(xintercept = c(1e-5, 1e-4), linetype = 2)
## Based on the above histogram, it's likely worth filtering the plasmid seq at 3e-5 and cells at 1e-4
klib_freq_filtered <- klib_freq %>% filter(f0b >= 1e-5) %>% mutate(n0 = n) %>% mutate(f0 = n/sum(n))
kr1_freq_filtered <- kr1_freq %>% filter(f1b >= 1e-4) %>% mutate(n0 = n) %>% mutate(f1 = n/sum(n))
kr2_freq_filtered <- kr2_freq %>% filter(f2b >= 1e-4) %>% mutate(n0 = n) %>% mutate(f2 = n/sum(n))
kr3_freq_filtered <- kr3_freq %>% filter(f3b >= 1e-4) %>% mutate(n0 = n) %>% mutate(f3 = n/sum(n))
k_filtered_enrich <- merge(klib_freq_filtered[,c("kozak_sequence","n0","f0")], kr1_freq_filtered[,c("kozak_sequence","n1","f1")], by = "kozak_sequence", all.y = T)
k_filtered_enrich <- merge(k_filtered_enrich, kr2_freq_filtered[,c("kozak_sequence","n2","f2")], by = "kozak_sequence", all = T)
k_filtered_enrich <- merge(k_filtered_enrich, kr3_freq_filtered[,c("kozak_sequence","n3","f3")], by = "kozak_sequence", all = T)
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = k_filtered_enrich, aes(x = f0, y = f1))
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = k_filtered_enrich, aes(x = f0, y = f2))
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = k_filtered_enrich, aes(x = f0, y = f3))
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = k_filtered_enrich, aes(x = f1, y = f2))
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = k_filtered_enrich, aes(x = f2, y = f3))
### Now take an average frequency for all the cell data to compare before and after recombination
k_filtered_enrich[is.na(k_filtered_enrich)] <- 0
k_filtered_enrich2 <- k_filtered_enrich %>% mutate(fcells = (f1 + f2 + f3)/3) %>% mutate(sdcells = sqrt(((f1-fcells)^2 + (f2-fcells)^2 + (f3-fcells)^2)/2)) %>% mutate(cvcells = sdcells / fcells)
ggplot() + scale_x_log10() + scale_y_log10() +
geom_point(data = k_filtered_enrich2, aes(x = f0, y = fcells))
ggplot() + scale_x_log10() +
geom_histogram(data = k_filtered_enrich2, aes(x = cvcells))
#separate based on variants
k_filtered_enrich3 = k_filtered_enrich2 %>% mutate(code = substr(kozak_sequence, 1, 1))
k_filtered_enrich3 = k_filtered_enrich3 %>% mutate(variant = case_when(code == "A" ~ "WT",
code == "C" ~ "R429C",
code == "G" ~ "R304W"))
k_filtered_enrich3[k_filtered_enrich3$kozak_sequence == "_OTHER","variant"] <- "Other"
k_filtered_enrich3[k_filtered_enrich3$kozak_sequence == "_TEMPL","variant"] <- "Template"
i0710 <- read.csv(file = "Data/STIM1_Kozak/I0710.csv", header = T)
i0711 <- read.csv(file = "Data/STIM1_Kozak/I0711.csv", header = T)
r5t0 <- merge(i0710, i0711, by = "Sequence", all = T)
r5t0$kozak <- substr(r5t0$Sequence,1,6)
r5t0$coding <- substr(r5t0$Sequence,7,20)
r5t0 <- r5t0 %>% filter(coding == "ATGGATGTATGCG")
ggplot() + geom_point(data = r5t0, aes(x = Count.x, y = Count.y)) +
scale_x_log10() + scale_y_log10()
i0712 <- read.csv(file = "Data/STIM1_Kozak/I0712.csv", header = T)
i0713 <- read.csv(file = "Data/STIM1_Kozak/I0713.csv", header = T)
r5t1 <- merge(i0712, i0713, by = "Sequence", all = T)
r5t1$kozak <- substr(r5t1$Sequence,1,6)
r5t1$coding <- substr(r5t1$Sequence,7,20)
r5t1 <- r5t1 %>% filter(coding == "ATGGATGTATGCG")
ggplot() + geom_point(data = r5t1, aes(x = Count.x, y = Count.y)) +
scale_x_log10() + scale_y_log10()
i0714 <- read.csv(file = "Data/STIM1_Kozak/I0714.csv", header = T)
i0715 <- read.csv(file = "Data/STIM1_Kozak/I0715.csv", header = T)
r5t2 <- merge(i0714, i0715, by = "Sequence", all = T)
r5t2$kozak <- substr(r5t2$Sequence,1,6)
r5t2$coding <- substr(r5t2$Sequence,7,20)
r5t2 <- r5t2 %>% filter(coding == "ATGGATGTATGCG")
ggplot() + geom_point(data = r5t2, aes(x = Count.x, y = Count.y)) +
scale_x_log10() + scale_y_log10()
i0716 <- read.csv(file = "Data/STIM1_Kozak/I0716.csv", header = T)
i0717 <- read.csv(file = "Data/STIM1_Kozak/I0717.csv", header = T)
r6t0 <- merge(i0716, i0717, by = "Sequence", all = T)
r6t0$kozak <- substr(r6t0$Sequence,1,6)
r6t0$coding <- substr(r6t0$Sequence,7,20)
r6t0 <- r6t0 %>% filter(coding == "ATGGATGTATGCG")
ggplot() + geom_point(data = r6t0, aes(x = Count.x, y = Count.y)) +
scale_x_log10() + scale_y_log10()
i0718 <- read.csv(file = "Data/STIM1_Kozak/I0718.csv", header = T)
i0719 <- read.csv(file = "Data/STIM1_Kozak/I0719.csv", header = T)
r6t1 <- merge(i0718, i0719, by = "Sequence", all = T)
r6t1$kozak <- substr(r6t1$Sequence,1,6)
r6t1$coding <- substr(r6t1$Sequence,7,20)
r6t1 <- r6t1 %>% filter(coding == "ATGGATGTATGCG")
ggplot() + geom_point(data = r6t1, aes(x = Count.x, y = Count.y)) +
scale_x_log10() + scale_y_log10()
i0720 <- read.csv(file = "Data/STIM1_Kozak/I0720.csv", header = T)
i0721 <- read.csv(file = "Data/STIM1_Kozak/I0721.csv", header = T)
r6t2 <- merge(i0720, i0721, by = "Sequence", all = T)
r6t2$kozak <- substr(r6t2$Sequence,1,6)
r6t2$coding <- substr(r6t2$Sequence,7,20)
r6t2 <- r6t2 %>% filter(coding == "ATGGATGTATGCG")
ggplot() + geom_point(data = r6t2, aes(x = Count.x, y = Count.y)) +
scale_x_log10() + scale_y_log10()
#r5t0[is.na(r5t0)] <- 0.1
r5t0$freq1 <- r5t0$Count.x / sum(r5t0$Count.x, na.rm = T)
r5t0$freq2 <- r5t0$Count.y / sum(r5t0$Count.y, na.rm = T)
r5t0$r5t0 <- rowMeans(r5t0[c("freq1", "freq2")])
#r5t1[is.na(r5t1)] <- 0.1
r5t1$freq1 <- r5t1$Count.x / sum(r5t1$Count.x, na.rm = T)
r5t1$freq2 <- r5t1$Count.y / sum(r5t1$Count.y, na.rm = T)
r5t1$r5t1 <- rowMeans(r5t1[c("freq1", "freq2")])
r5 <- merge(r5t0[,c("kozak","r5t0")], r5t1[,c("kozak","r5t1")])
#r5t2[is.na(r5t2)] <- 0.1
r5t2$freq1 <- r5t2$Count.x / sum(r5t2$Count.x, na.rm = T)
r5t2$freq2 <- r5t2$Count.y / sum(r5t2$Count.y, na.rm = T)
r5t2$r5t2 <- rowMeans(r5t2[c("freq1", "freq2")])
r5 <- merge(r5, r5t2[,c("kozak","r5t2")])
ggplot() + geom_point(data = r5, aes(x = r5t0, y = r5t1)) +
scale_x_log10() + scale_y_log10()
ggplot() + geom_point(data = r5, aes(x = r5t1, y = r5t2)) +
scale_x_log10() + scale_y_log10()
ggplot() + geom_point(data = r5, aes(x = r5t0, y = r5t2)) +
scale_x_log10() + scale_y_log10()
r5$r5 <- (rowMeans(log10(r5[,c("r5t1","r5t2")]), na.rm = T) - log10(r5$r5t0))
colnames(r5)[1] <- "kozak_sequence"
#r6t0[is.na(r6t0)] <- 0.1
r6t0$freq1 <- r6t0$Count.x / sum(r6t0$Count.x, na.rm = T)
r6t0$freq2 <- r6t0$Count.y / sum(r6t0$Count.y, na.rm = T)
r6t0$r6t0 <- rowMeans(r6t0[c("freq1", "freq2")])
#r6t1[is.na(r6t1)] <- 0.1
r6t1$freq1 <- r6t1$Count.x / sum(r6t1$Count.x, na.rm = T)
r6t1$freq2 <- r6t1$Count.y / sum(r6t1$Count.y, na.rm = T)
r6t1$r6t1 <- rowMeans(r6t1[c("freq1", "freq2")])
r6 <- merge(r6t0[,c("kozak","r6t0")], r6t1[,c("kozak","r6t1")])
#r6t2[is.na(r6t2)] <- 0.1
r6t2$freq1 <- r6t2$Count.x / sum(r6t2$Count.x, na.rm = T)
r6t2$freq2 <- r6t2$Count.y / sum(r6t2$Count.y, na.rm = T)
r6t2$r6t2 <- rowMeans(r6t2[c("freq1", "freq2")])
r6 <- merge(r6, r6t2[,c("kozak","r6t2")])
ggplot() + geom_point(data = r6, aes(x = r6t0, y = r6t1)) +
scale_x_log10() + scale_y_log10()
ggplot() + geom_point(data = r6, aes(x = r6t1, y = r6t2)) +
scale_x_log10() + scale_y_log10()
ggplot() + geom_point(data = r6, aes(x = r6t0, y = r6t2)) +
scale_x_log10() + scale_y_log10()
r6$r6 <- (rowMeans(log10(r6[,c("r6t1","r6t2")]), na.rm = T) - log10(r6$r6t0))
colnames(r6)[1] <- "kozak_sequence"
k_filtered_enrich3$enrichment <- log10(k_filtered_enrich3$fcells / k_filtered_enrich3$f0)
k_score0 = k_filtered_enrich3 %>% select("kozak_sequence","variant","f0", "fcells","enrichment") %>% filter(!(enrichment %in% c("0","Inf")))
k_score <- merge(merge(k_score0, r5[,c("kozak_sequence","r5")], all = T), r6[,c("kozak_sequence","r6")], all = T)
k_score$survival <- rowMeans(k_score[,c("enrichment","r5","r6")], na.rm = T)
#abund_raw = read.csv("Kozak_values.csv")
abund_raw = complete_frame5[,c("sequence","imputed_score","calibrated_score")]
abund_raw = abund_raw %>% mutate(kozak_sequence = substr(sequence, 1, 6))
abund_stim = abund_raw %>% mutate(code = substr(kozak_sequence, 1,1)) %>% filter(code != "T")
k_score = left_join(k_score, abund_stim)
k_score_samples <- k_score %>% filter(variant %in% c("WT", "R304W","R429C") & !is.na(calibrated_score))
k_score_samples$variant <- factor(k_score_samples$variant, levels = c("WT", "R304W","R429C"))
STIM1_Kozak_histogram <- ggplot() +
labs(x = "Enrichment", y = "Number of variants") +
theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), strip.text.y.right = element_text(angle = 0)) +
scale_x_log10(limits = c(0.01,100), expand = c(0,0), breaks = c(0.01,1,100)) +
scale_y_continuous(breaks = c(0,20,40)) +
geom_vline(xintercept = 10^k_score$survival[2], linetype = 2) +
geom_histogram(data = k_score_samples, aes(x= 10^survival), bins = 10, color = "black", fill = "grey75") +
facet_grid(rows = vars(variant))
STIM1_Kozak_histogram
ggsave(file = "Plots/STIM1_Kozak_histogram.pdf", STIM1_Kozak_histogram, height = 1.5, width = 1.9)
k_score_samples$variant <- factor(k_score_samples$variant, levels = c("R304W","R429C","WT"))
STIM1_geom_smooth_plot <- ggplot() + theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank()) +
scale_x_log10(expand = c(0,0), limits = c(0.007,1.34)) + scale_y_log10(expand = c(0,0)) +
labs(x = "Calibrated abundance score", y = "Enrichment score") +
geom_hline(yintercept = 10^k_score$survival[2], alpha = 0.4) +
#geom_point(data = k_score_samples, aes(x= calibrated_score, y= 10^survival, color = variant)) +
geom_smooth(data = k_score_samples, aes(x= calibrated_score, y= 10^survival, color = variant), alpha = 0, span = 1) +
#facet_grid(cols = vars(variant)) +
NULL; STIM1_geom_smooth_plot
ggsave(file = "Plots/STIM1_geom_smooth_plot.pdf", STIM1_geom_smooth_plot, height = 1.5, width = 2.9)
Scaled_individual_multiplex_s2_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,2), expand = c(0,0)) + scale_y_log10(limits = c(0.008,10)) +  #scale_y_continuous(limits = c(0,1)) +#scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV-2 spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL
Scaled_individual_multiplex_s2_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,2), expand = c(0,0)) + scale_y_log10(limits = c(0.008,10)) +  #scale_y_continuous(limits = c(0,1)) +#scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV-2 spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s2_plot
Scaled_individual_multiplex_s2_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,2), expand = c(0,0)) + scale_y_log10(limits = c(0.008,2)) +  #scale_y_continuous(limits = c(0,1)) +#scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV-2 spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s2_plot
Scaled_individual_multiplex_s2_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,2), expand = c(0,0)) + scale_y_log10(limits = c(0.01,1.1)) +  #scale_y_continuous(limits = c(0,1)) +#scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV-2 spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s2_plot
Scaled_individual_multiplex_s2_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,1.1), expand = c(0,0)) + scale_y_log10(limits = c(0.01,1.1)) +  #scale_y_continuous(limits = c(0,1)) +#scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV-2 spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s2_plot
Scaled_individual_multiplex_s1_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,1.1), expand = c(0,0)) + scale_y_log10(limits = c(0.01,1.1)) + #scale_y_continuous(limits = c(0,1)) + #scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = mfi_individual, y = scaled_ind_s1), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = calibrated_score, y = scaled_s1), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = mfi_individual, y = scaled_ind_s1), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = calibrated_score, y = scaled_s1), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s1_plot
Scaled_individual_multiplex_s1_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,1.1), expand = c(0,0)) + scale_y_log10(limits = c(0.001,1.1)) + #scale_y_continuous(limits = c(0,1)) + #scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = mfi_individual, y = scaled_ind_s1), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = calibrated_score, y = scaled_s1), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = mfi_individual, y = scaled_ind_s1), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = calibrated_score, y = scaled_s1), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s1_plot
Scaled_individual_multiplex_s2_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,1.1), expand = c(0,0)) + scale_y_log10(limits = c(0.003,1.1)) +  #scale_y_continuous(limits = c(0,1)) +#scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV-2 spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s2_plot
ggsave(file = "plots/Scaled_individual_multiplex_s2_plot.pdf", Scaled_individual_multiplex_s2_plot, height = 1.5, width = 1.5)
Scaled_individual_multiplex_s1_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,1.1), expand = c(0,0)) + scale_y_log10(limits = c(0.003,1.1)) + #scale_y_continuous(limits = c(0,1)) + #scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = mfi_individual, y = scaled_ind_s1), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = calibrated_score, y = scaled_s1), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = mfi_individual, y = scaled_ind_s1), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = calibrated_score, y = scaled_s1), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s1_plot
ggsave(file = "plots/Scaled_individual_multiplex_s1_plot.pdf", Scaled_individual_multiplex_s1_plot, height = 1.5, width = 1.5)
Scaled_individual_multiplex_vsv_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,2), expand = c(0,0)) + #scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "VSV-G") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
#stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), alpha = 1, shape = 20, size = 2, color = "blue") +
#geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL
Scaled_individual_multiplex_vsv_plot
individual_s2 <- individual_infection_summary %>% filter(virus %in% c("G1074A SARS2","G928A SARS2")) %>% group_by(sequence) %>% summarize(individual_s2 = 10^mean(log10(geomean_fraction_wt_infection)))
individual_s2$scaled_ind_s2 <- (individual_s2$individual_s2 - as.numeric(individual_s2[individual_s2$sequence == "None", "individual_s2"])) /
(as.numeric(individual_s2[individual_s2$sequence == "GCCACCATG", "individual_s2"]) - as.numeric(individual_s2[individual_s2$sequence == "None", "individual_s2"]))
individual_s1 <- individual_infection_summary %>% filter(virus %in% c("SARS1")) %>% group_by(sequence) %>% mutate(individual_s1 = geomean_fraction_wt_infection)
individual_s1$scaled_ind_s1 <- (individual_s1$individual_s1 - as.numeric(individual_s1[individual_s1$sequence == "None", "individual_s1"])) /
(as.numeric(individual_s1[individual_s1$sequence == "GCCACCATG", "individual_s1"]) - as.numeric(individual_s1[individual_s1$sequence == "None", "individual_s1"]))
individual_vsv <- individual_infection_summary %>% filter(virus %in% c("VSVG")) %>% group_by(sequence) %>% mutate(individual_vsv = geomean_fraction_wt_infection)
individual_vsv$scaled_ind_vsv <- (individual_vsv$individual_vsv - as.numeric(individual_vsv[individual_vsv$sequence == "None", "individual_vsv"])) /
(as.numeric(individual_vsv[individual_vsv$sequence == "GCCACCATG", "individual_vsv"]) - as.numeric(individual_vsv[individual_vsv$sequence == "None", "individual_vsv"]))
complete_frame6 <- merge(complete_frame5, individual_s2[,c("sequence","individual_s2","scaled_ind_s2")], by = "sequence", all.x = T)
complete_frame6 <- merge(complete_frame6, individual_s1[,c("sequence","individual_s1","scaled_ind_s1")], by = "sequence", all.x = T)
complete_frame6 <- merge(complete_frame6, individual_vsv[,c("sequence","individual_vsv","scaled_ind_vsv")], by = "sequence", all.x = T)
complete_frame6$scaled_s2 <- (complete_frame6$s2 - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "s2"])) /
(as.numeric(complete_frame6[complete_frame6$sequence == "GCCACCATG", "s2"]) - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "s2"]))
complete_frame6$scaled_s1 <- (complete_frame6$s1 - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "s1"])) /
(as.numeric(complete_frame6[complete_frame6$sequence == "GCCACCATG", "s1"]) - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "s1"]))
complete_frame6$scaled_vsv <- (complete_frame6$vsv - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "vsv"])) /
(as.numeric(complete_frame6[complete_frame6$sequence == "GCCACCATG", "vsv"]) - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "vsv"]))
Scaled_individual_multiplex_s2_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,1.1), expand = c(0,0)) + scale_y_log10(limits = c(0.003,1.1)) +  #scale_y_continuous(limits = c(0,1)) +#scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV-2 spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s2_plot
ggsave(file = "plots/Scaled_individual_multiplex_s2_plot.pdf", Scaled_individual_multiplex_s2_plot, height = 1.5, width = 1.5)
Scaled_individual_multiplex_s1_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,1.1), expand = c(0,0)) + scale_y_log10(limits = c(0.003,1.1)) + #scale_y_continuous(limits = c(0,1)) + #scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = mfi_individual, y = scaled_ind_s1), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = calibrated_score, y = scaled_s1), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = mfi_individual, y = scaled_ind_s1), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = calibrated_score, y = scaled_s1), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s1_plot
ggsave(file = "plots/Scaled_individual_multiplex_s1_plot.pdf", Scaled_individual_multiplex_s1_plot, height = 1.5, width = 1.5)
Scaled_individual_multiplex_vsv_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,2), expand = c(0,0)) + #scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "VSV-G") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
#stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), alpha = 1, shape = 20, size = 2, color = "blue") +
#geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_vsv_plot
ggsave(file = "plots/Scaled_individual_multiplex_vsv_plot.pdf", Scaled_individual_multiplex_vsv_plot, height = 1.5, width = 1.5)
individual_s2 <- individual_infection_summary %>% filter(virus %in% c("G1074A SARS2","G928A SARS2")) %>% group_by(sequence) %>% summarize(individual_s2 = 10^mean(log10(geomean_fraction_wt_infection)))
individual_s2$scaled_ind_s2 <- (individual_s2$individual_s2 - as.numeric(individual_s2[individual_s2$sequence == "None", "individual_s2"])) /
(as.numeric(individual_s2[individual_s2$sequence == "GCCACCATG", "individual_s2"]) - as.numeric(individual_s2[individual_s2$sequence == "None", "individual_s2"]))
individual_s1 <- individual_infection_summary %>% filter(virus %in% c("SARS1")) %>% group_by(sequence) %>% mutate(individual_s1 = geomean_fraction_wt_infection)
individual_s1$scaled_ind_s1 <- (individual_s1$individual_s1 - as.numeric(individual_s1[individual_s1$sequence == "None", "individual_s1"])) /
(as.numeric(individual_s1[individual_s1$sequence == "GCCACCATG", "individual_s1"]) - as.numeric(individual_s1[individual_s1$sequence == "None", "individual_s1"]))
individual_vsv <- individual_infection_summary %>% filter(virus %in% c("VSVG")) %>% group_by(sequence) %>% mutate(individual_vsv = geomean_fraction_wt_infection)
individual_vsv$scaled_ind_vsv <- (individual_vsv$individual_vsv - as.numeric(individual_vsv[individual_vsv$sequence == "None", "individual_vsv"])) /
(as.numeric(individual_vsv[individual_vsv$sequence == "GCCACCATG", "individual_vsv"]) - as.numeric(individual_vsv[individual_vsv$sequence == "None", "individual_vsv"]))
complete_frame6 <- merge(complete_frame5, individual_s2[,c("sequence","individual_s2","scaled_ind_s2")], by = "sequence", all.x = T)
complete_frame6 <- merge(complete_frame6, individual_s1[,c("sequence","individual_s1","scaled_ind_s1")], by = "sequence", all.x = T)
complete_frame6 <- merge(complete_frame6, individual_vsv[,c("sequence","individual_vsv","scaled_ind_vsv")], by = "sequence", all.x = T)
complete_frame6$scaled_s2 <- (complete_frame6$s2 - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "s2"])) /
(as.numeric(complete_frame6[complete_frame6$sequence == "GCCACCATG", "s2"]) - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "s2"]))
complete_frame6$scaled_s1 <- (complete_frame6$s1 - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "s1"])) /
(as.numeric(complete_frame6[complete_frame6$sequence == "GCCACCATG", "s1"]) - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "s1"]))
complete_frame6$scaled_vsv <- (complete_frame6$vsv - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "vsv"])) /
(as.numeric(complete_frame6[complete_frame6$sequence == "GCCACCATG", "vsv"]) - as.numeric(complete_frame6[complete_frame6$sequence == "XXXXXXXXX", "vsv"]))
Scaled_individual_multiplex_s2_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,1.1), expand = c(0,0)) + scale_y_log10(limits = c(0.003,1.1)) +  #scale_y_continuous(limits = c(0,1)) +#scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV-2 spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = mfi_individual, y = scaled_ind_s2), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s2) & !is.na(scaled_s2)), aes(x = calibrated_score, y = scaled_s2), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s2_plot
ggsave(file = "plots/Scaled_individual_multiplex_s2_plot.pdf", Scaled_individual_multiplex_s2_plot, height = 1.5, width = 1.5)
Scaled_individual_multiplex_s1_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,1.1), expand = c(0,0)) + scale_y_log10(limits = c(0.003,1.1)) + #scale_y_continuous(limits = c(0,1)) + #scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "SARS-CoV spike") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = mfi_individual, y = scaled_ind_s1), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = calibrated_score, y = scaled_s1), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = mfi_individual, y = scaled_ind_s1), alpha = 1, shape = 20, size = 2, color = "blue") +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_s1) & !is.na(scaled_s1)), aes(x = calibrated_score, y = scaled_s1), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_s1_plot
ggsave(file = "plots/Scaled_individual_multiplex_s1_plot.pdf", Scaled_individual_multiplex_s1_plot, height = 1.5, width = 1.5)
Scaled_individual_multiplex_vsv_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,2), expand = c(0,0)) + scale_y_log10(limits = c(0.003,1.1)) + ##scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "VSV-G") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
#stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), alpha = 1, shape = 20, size = 2, color = "blue") +
#geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_vsv_plot
ggsave(file = "plots/Scaled_individual_multiplex_vsv_plot.pdf", Scaled_individual_multiplex_vsv_plot, height = 1.5, width = 1.5)
Scaled_individual_multiplex_vsv_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,2), expand = c(0,0)) + scale_y_log10(limits = c(0.003,3)) + ##scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "VSV-G") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
#stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), alpha = 1, shape = 20, size = 2, color = "blue") +
#geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_vsv_plot
Scaled_individual_multiplex_vsv_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,2), expand = c(0,0)) + scale_y_log10(limits = c(0.003,4)) + ##scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "VSV-G") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
#stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), alpha = 1, shape = 20, size = 2, color = "blue") +
#geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_vsv_plot
Scaled_individual_multiplex_vsv_plot <- ggplot() + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.01,2), expand = c(0,0)) + scale_y_log10(limits = c(0.003,5)) + ##scale_y_log10(limits = c(0.008,10)) +
labs(x = "Abundance", y = "Enrichment in infected cells", title = "VSV-G") +
stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "cyan", alpha = 0.2) +
#stat_smooth(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), geom='line', se=FALSE, alpha = 1, shape = 20, size = 2, color = "red", line.alpha = 0.2) +
geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = mfi_individual, y = scaled_ind_vsv), alpha = 1, shape = 20, size = 2, color = "blue") +
#geom_point(data = complete_frame6 %>% filter(!is.na(scaled_ind_vsv) & !is.na(scaled_vsv)), aes(x = calibrated_score, y = scaled_vsv), alpha = 1, shape = 20, size = 2, color = "darkred") +
NULL; Scaled_individual_multiplex_vsv_plot
ggsave(file = "plots/Scaled_individual_multiplex_s1_plot.pdf", Scaled_individual_multiplex_s1_plot, height = 1.5, width = 1.5)
ggsave(file = "plots/Scaled_individual_multiplex_s2_plot.pdf", Scaled_individual_multiplex_s2_plot, height = 1.5, width = 1.5)
Noderer_vs_individual_scatterplot <- ggplot() +
labs(x = "MFI individual", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4 %>% filter(!is.na(mfi_individual)), aes(x = mfi_individual, y = noderer)) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer, label = sequence), color = "orange") +
NULL; Noderer_vs_individual_scatterplot
ggsave(file = "plots/Noderer_vs_individual_scatterplot.png", Noderer_vs_individual_scatterplot, height = 4, width = 5)
Noderer_vs_calibrated_score_scatterplot <- ggplot() + theme(panel.grid = element_blank()) +
labs(x = "MFI calibrated sort-seq score", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4, aes(x = calibrated_score, y = noderer), alpha = 0.03) +
#geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer), color = "red") +
#geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer, label = sequence), color = "orange") +
NULL; Noderer_vs_calibrated_score_scatterplot
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.png", Noderer_vs_calibrated_score_scatterplot, height = 4, width = 4)
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.pdf", Noderer_vs_calibrated_score_scatterplot, height = 1.6, width = 3.32)
paste("Correlation coefficients between Noderer data and our sequencing data -->","Pearson's r^2:",
round(cor(log10(complete_frame4$calibrated_score), complete_frame4$noderer, method = "pearson", use = "complete")^2,2),"Spearman's rho^2:",
round(cor(log10(complete_frame4$calibrated_score), complete_frame4$noderer, method = "spearman", use = "complete")^2,2))
Noderer_vs_calibrated_score_scatterplot <- ggplot() + theme(panel.grid = element_blank()) +
labs(x = "MFI calibrated sort-seq score", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4, aes(x = calibrated_score, y = noderer), alpha = 0.03) +
#geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer), color = "red") +
#geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer, label = sequence), color = "orange") +
NULL; Noderer_vs_calibrated_score_scatterplot
Noderer_vs_individual_scatterplot <- ggplot() +
labs(x = "MFI individual", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4 %>% filter(!is.na(mfi_individual)), aes(x = mfi_individual, y = noderer)) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer, label = sequence), color = "orange") +
NULL; Noderer_vs_individual_scatterplot
ggsave(file = "plots/Noderer_vs_individual_scatterplot.png", Noderer_vs_individual_scatterplot, height = 4, width = 5)
ggsave(file = "plots/Noderer_vs_individual_scatterplot.pdf", Noderer_vs_individual_scatterplot, height = 4, width = 5)
Noderer_vs_calibrated_score_scatterplot <- ggplot() + theme(panel.grid = element_blank()) +
labs(x = "MFI calibrated sort-seq score", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4, aes(x = calibrated_score, y = noderer), alpha = 0.03) +
#geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer), color = "red") +
#geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer, label = sequence), color = "orange") +
NULL; Noderer_vs_calibrated_score_scatterplot
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.png", Noderer_vs_calibrated_score_scatterplot, height = 4, width = 4)
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.pdf", Noderer_vs_calibrated_score_scatterplot, height = 1.6, width = 3.32)
paste("Correlation coefficients between Noderer data and our sequencing data -->","Pearson's r^2:",
round(cor(log10(complete_frame4$calibrated_score), complete_frame4$noderer, method = "pearson", use = "complete")^2,2),"Spearman's rho^2:",
round(cor(log10(complete_frame4$calibrated_score), complete_frame4$noderer, method = "spearman", use = "complete")^2,2))
Noderer_vs_calibrated_score_scatterplot <- ggplot() + theme(panel.grid = element_blank()) +
labs(x = "MFI calibrated sort-seq score", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4, aes(x = calibrated_score, y = noderer), alpha = 0.03) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer, label = sequence), color = "orange") +
NULL; Noderer_vs_calibrated_score_scatterplot
Noderer_vs_calibrated_score_scatterplot <- ggplot() + theme(panel.grid = element_blank()) +
labs(x = "MFI calibrated sort-seq score", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4, aes(x = calibrated_score, y = noderer), alpha = 0.03) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer, label = sequence), color = "orange") +
NULL; Noderer_vs_calibrated_score_scatterplot
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.png", Noderer_vs_calibrated_score_scatterplot, height = 4, width = 4)
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.pdf", Noderer_vs_calibrated_score_scatterplot, height = 1.6, width = 3.32)
Noderer_vs_calibrated_score_scatterplot <- ggplot() + theme(panel.grid = element_blank()) +
labs(x = "MFI calibrated sort-seq score", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4, aes(x = calibrated_score, y = noderer), alpha = 0.03) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer, label = sequence), color = "orange", size = 3) +
NULL; Noderer_vs_calibrated_score_scatterplot
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.png", Noderer_vs_calibrated_score_scatterplot, height = 4, width = 4)
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.pdf", Noderer_vs_calibrated_score_scatterplot, height = 1.6, width = 3.32)
Noderer_vs_individual_scatterplot <- ggplot() +
labs(x = "MFI individual", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4 %>% filter(!is.na(mfi_individual)), aes(x = mfi_individual, y = noderer)) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer, label = sequence), color = "orange") +
NULL; Noderer_vs_individual_scatterplot
ggsave(file = "plots/Noderer_vs_individual_scatterplot.png", Noderer_vs_individual_scatterplot, height = 4, width = 5)
ggsave(file = "plots/Noderer_vs_individual_scatterplot.pdf", Noderer_vs_individual_scatterplot, height = 1.6, width = 3.32)
Noderer_vs_calibrated_score_scatterplot <- ggplot() + theme(panel.grid = element_blank()) +
labs(x = "MFI calibrated sort-seq score", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4, aes(x = calibrated_score, y = noderer), alpha = 0.03) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer, label = sequence), color = "orange", size = 3) +
NULL; Noderer_vs_calibrated_score_scatterplot
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.png", Noderer_vs_calibrated_score_scatterplot, height = 4, width = 4)
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.pdf", Noderer_vs_calibrated_score_scatterplot, height = 1.6, width = 3.32)
paste("Correlation coefficients between Noderer data and our sequencing data -->","Pearson's r^2:",
round(cor(log10(complete_frame4$calibrated_score), complete_frame4$noderer, method = "pearson", use = "complete")^2,2),"Spearman's rho^2:",
round(cor(log10(complete_frame4$calibrated_score), complete_frame4$noderer, method = "spearman", use = "complete")^2,2))
Noderer_vs_individual_scatterplot <- ggplot() +
labs(x = "MFI individual", y = "Noderer score") + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4 %>% filter(!is.na(mfi_individual)), aes(x = mfi_individual, y = noderer)) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer, label = sequence), color = "orange") +
NULL; Noderer_vs_individual_scatterplot
ggsave(file = "plots/Noderer_vs_individual_scatterplot.png", Noderer_vs_individual_scatterplot, height = 4, width = 5)
ggsave(file = "plots/Noderer_vs_individual_scatterplot.pdf", Noderer_vs_individual_scatterplot, height = 1.6, width = 3.32)
Noderer_vs_individual_scatterplot <- ggplot() +
labs(x = "MFI individual", y = "Noderer score") + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4 %>% filter(!is.na(mfi_individual)), aes(x = mfi_individual, y = noderer)) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer, label = sequence), color = "orange") +
NULL; Noderer_vs_individual_scatterplot
PWM_pointplot <- ggplot() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position = "top") +
labs(x = "Position along Kozak", y = "Weighted\nfrequency") +
geom_hline(yintercept = 0.25, linetype = 2, alpha = 0.4) +
geom_point(data = pwm_matrix_melt, aes(x = Var2, y = value, color = Var1, fill = Var1), stat = "identity", shape = 21, size = 2, alpha = 0.5)
PWM_pointplot
ggsave(file = "plots/PWM_pointplot.pdf", PWM_pointplot, height = 1.4, width = 3.4)
ggsave(file = "plots/PWM_pointplot.pdf", PWM_pointplot, height = 2.2, width = 3.4)
ggsave(file = "plots/PWM_pointplot.pdf", PWM_pointplot, height = 2, width = 3.4)
View(pwm_dataframe)
View(pwm_dataframe)
Noderer_vs_calibrated_score_scatterplot <- ggplot() + theme(panel.grid = element_blank()) +
labs(x = "MFI calibrated sort-seq score", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4, aes(x = calibrated_score, y = noderer), alpha = 0.03) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer, label = sequence), color = "orange", size = 1) +
NULL; Noderer_vs_calibrated_score_scatterplot
Noderer_vs_calibrated_score_scatterplot <- ggplot() + theme(panel.grid = element_blank()) +
labs(x = "MFI calibrated sort-seq score", y = "Noderer score") +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4, aes(x = calibrated_score, y = noderer), alpha = 0.03) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = calibrated_score, y = noderer, label = sequence), color = "orange", size = 2) +
NULL; Noderer_vs_calibrated_score_scatterplot
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.png", Noderer_vs_calibrated_score_scatterplot, height = 4, width = 4)
ggsave(file = "plots/Noderer_vs_calibrated_score_scatterplot.pdf", Noderer_vs_calibrated_score_scatterplot, height = 1.6, width = 3.32)
Noderer_vs_individual_scatterplot <- ggplot() +
labs(x = "MFI individual", y = "Noderer score") + theme(panel.grid = element_blank()) +
scale_x_log10(limits = c(0.0065,1.6)) + scale_y_continuous(limits = c(20,125)) +
geom_point(data = complete_frame4 %>% filter(!is.na(mfi_individual)), aes(x = mfi_individual, y = noderer)) +
geom_point(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer), color = "red") +
geom_text_repel(data = complete_frame4 %>% filter(sequence %in% c("TTCATCATG","GCGCGCATG")), aes(x = mfi_individual, y = noderer, label = sequence), color = "orange", size = 3) +
NULL; Noderer_vs_individual_scatterplot
ggsave(file = "plots/Noderer_vs_individual_scatterplot.png", Noderer_vs_individual_scatterplot, height = 4, width = 5)
ggsave(file = "plots/Noderer_vs_individual_scatterplot.pdf", Noderer_vs_individual_scatterplot, height = 1.6, width = 3.32)
